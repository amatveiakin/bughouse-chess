[package]
name = "bughouse_wasm"
version = "0.1.0"
authors = ["Andrei Matveiakin <a.matveiakin@gmail.com>"]
edition = "2024"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
strict = []  # treat warnings as a build error

[dependencies]
enum-map = { workspace = true }
getrandom = { workspace = true, features = ["wasm_js"] }
instant = { workspace = true, features = ["wasm-bindgen"] }
itertools = { workspace = true }
regex-lite = { workspace = true }
serde_json = { workspace = true }
strum = { workspace = true, features = ["derive"] }
time = { workspace = true, features = ["formatting", "local-offset", "macros", "serde", "wasm-bindgen"] }
wasm-bindgen = { workspace = true }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { workspace = true }

bughouse_chess = { path = ".." }

[dependencies.web-sys]
workspace = true
features = [
  'CanvasRenderingContext2d',
  'CssStyleDeclaration',
  'Document',
  'DomRect',
  'DomTokenList',
  'Element',
  'Event',
  'EventTarget',
  'FormData',
  'HtmlCanvasElement',
  'HtmlCollection',
  'HtmlElement',
  'HtmlFormElement',
  'HtmlInputElement',
  'HtmlSelectElement',
  'Node',
  'NodeList',
  'ScrollBehavior',
  'ScrollIntoViewOptions',
  'ScrollLogicalPosition',
  'TextMetrics',
  'Window',
]

[dev-dependencies]
wasm-bindgen-test = { workspace = true }

[lints]
workspace = true

# Improvement potential: Optimize WASM version for size. This is blocked on the following:
#   - profiles can only be specified in the Cargo workspace root (not here);
#   - we don't want this to affect server build;
#   - wasm-pack cannot use custom cargo profiles: https://github.com/rustwasm/wasm-pack/issues/1111
# [profile.release]
# opt-level = "s"  # optimize for small code size

[package.metadata.wasm-pack.profile.profiling]
wasm-opt = ['-O4', '-g']  # add '-g'; workaround for https://github.com/rustwasm/wasm-pack/issues/797
